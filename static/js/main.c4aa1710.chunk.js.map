{"version":3,"sources":["components/Button/Button.jsx","components/Counter/Counter.jsx","App.js","index.js"],"names":["Button","callback","text","type","onClick","Counter","React","memo","counter","addOne","add100","increase","className","App","state","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,G,MAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAb,OACpB,4BAAQC,KAAK,SAASC,QAASH,GAC5BC,KCDQG,GDKEC,IAAMC,KAAKP,GCLH,SAAC,GAAD,IAAGQ,EAAH,EAAGA,QAASC,EAAZ,EAAYA,OAAQC,EAApB,EAAoBA,OAAQC,EAA5B,EAA4BA,SAA5B,OACrB,yBAAKC,UAAU,aACb,wBAAIA,UAAU,SAASJ,GACvB,yBAAKI,UAAU,WACb,kBAAC,EAAD,CAAQV,KAAK,UAAUD,SAAUQ,IACjC,kBAAC,EAAD,CAAQP,KAAK,UAAUD,SAAUS,IACjC,kBAAC,EAAD,CAAQR,KAAK,WAAWD,SAAUU,QC8BzBE,E,4MAnCbC,MAAQ,CACNN,QAAS,G,EAGXC,OAAS,WACP,EAAKM,UAAS,SAAAD,GAAK,MAAK,CACtBN,QAASM,EAAMN,QAAU,O,EAI7BE,OAAS,WACP,EAAKK,UAAS,SAAAD,GAAK,MAAK,CACtBN,QAASM,EAAMN,QAAU,S,EAI7BG,SAAW,WACT,EAAKF,SACD,EAAKK,MAAMN,QAAU,IAAM,GAC7B,EAAKE,U,4CAIT,WACE,OACE,kBAAC,EAAD,CACEF,QAASQ,KAAKF,MAAMN,QACpBC,OAAQO,KAAKP,OACbC,OAAQM,KAAKN,OACbC,SAAUK,KAAKL,e,GA9BLL,IAAMW,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.c4aa1710.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ callback, text }) => (\n  <button type=\"button\" onClick={callback}>\n    {text}\n  </button>\n);\n\nexport default React.memo(Button);\n\nButton.propTypes = {\n  callback: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '../Button';\n\nexport const Counter = ({ counter, addOne, add100, increase }) => (\n  <div className=\"container\">\n    <h1 className=\"title\">{counter}</h1>\n    <div className=\"buttons\">\n      <Button text=\"add one\" callback={addOne} />\n      <Button text=\"add 100\" callback={add100} />\n      <Button text=\"increase\" callback={increase} />\n    </div>\n  </div>\n);\n\nCounter.propTypes = {\n  counter: PropTypes.number.isRequired,\n  addOne: PropTypes.func.isRequired,\n  add100: PropTypes.func.isRequired,\n  increase: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { Counter } from './components/Counter';\n\nclass App extends React.Component {\n  state = {\n    counter: 0,\n  }\n\n  addOne = () => {\n    this.setState(state => ({\n      counter: state.counter + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState(state => ({\n      counter: state.counter + 100,\n    }));\n  };\n\n  increase = () => {\n    this.addOne();\n    if (this.state.counter % 5 === 0) {\n      this.add100();\n    }\n  };\n\n  render() {\n    return (\n      <Counter\n        counter={this.state.counter}\n        addOne={this.addOne}\n        add100={this.add100}\n        increase={this.increase}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}